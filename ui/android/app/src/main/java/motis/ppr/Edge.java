// automatically generated by the FlatBuffers compiler, do not modify

package motis.ppr;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Edge extends Table {
  public static Edge getRootAsEdge(ByteBuffer _bb) { return getRootAsEdge(_bb, new Edge()); }
  public static Edge getRootAsEdge(ByteBuffer _bb, Edge obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public Edge __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public double distance() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double duration() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double accessibility() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public motis.Polyline path() { return path(new motis.Polyline()); }
  public motis.Polyline path(motis.Polyline obj) { int o = __offset(10); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }
  public String name() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public long osmWayId() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public int edgeType() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int streetType() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int crossingType() { int o = __offset(20); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int elevationUp() { int o = __offset(22); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int elevationDown() { int o = __offset(24); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean inclineUp() { int o = __offset(26); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int handrail() { int o = __offset(28); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createEdge(FlatBufferBuilder builder,
      double distance,
      double duration,
      double accessibility,
      int pathOffset,
      int nameOffset,
      long osm_way_id,
      int edge_type,
      int street_type,
      int crossing_type,
      int elevation_up,
      int elevation_down,
      boolean incline_up,
      int handrail) {
    builder.startObject(13);
    Edge.addOsmWayId(builder, osm_way_id);
    Edge.addAccessibility(builder, accessibility);
    Edge.addDuration(builder, duration);
    Edge.addDistance(builder, distance);
    Edge.addElevationDown(builder, elevation_down);
    Edge.addElevationUp(builder, elevation_up);
    Edge.addName(builder, nameOffset);
    Edge.addPath(builder, pathOffset);
    Edge.addHandrail(builder, handrail);
    Edge.addInclineUp(builder, incline_up);
    Edge.addCrossingType(builder, crossing_type);
    Edge.addStreetType(builder, street_type);
    Edge.addEdgeType(builder, edge_type);
    return Edge.endEdge(builder);
  }

  public static void startEdge(FlatBufferBuilder builder) { builder.startObject(13); }
  public static void addDistance(FlatBufferBuilder builder, double distance) { builder.addDouble(0, distance, 0.0); }
  public static void addDuration(FlatBufferBuilder builder, double duration) { builder.addDouble(1, duration, 0.0); }
  public static void addAccessibility(FlatBufferBuilder builder, double accessibility) { builder.addDouble(2, accessibility, 0.0); }
  public static void addPath(FlatBufferBuilder builder, int pathOffset) { builder.addOffset(3, pathOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(4, nameOffset, 0); }
  public static void addOsmWayId(FlatBufferBuilder builder, long osmWayId) { builder.addLong(5, osmWayId, 0); }
  public static void addEdgeType(FlatBufferBuilder builder, int edgeType) { builder.addByte(6, (byte)edgeType, 0); }
  public static void addStreetType(FlatBufferBuilder builder, int streetType) { builder.addByte(7, (byte)streetType, 0); }
  public static void addCrossingType(FlatBufferBuilder builder, int crossingType) { builder.addByte(8, (byte)crossingType, 0); }
  public static void addElevationUp(FlatBufferBuilder builder, int elevationUp) { builder.addInt(9, elevationUp, 0); }
  public static void addElevationDown(FlatBufferBuilder builder, int elevationDown) { builder.addInt(10, elevationDown, 0); }
  public static void addInclineUp(FlatBufferBuilder builder, boolean inclineUp) { builder.addBoolean(11, inclineUp, false); }
  public static void addHandrail(FlatBufferBuilder builder, int handrail) { builder.addByte(12, (byte)handrail, 0); }
  public static int endEdge(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};

